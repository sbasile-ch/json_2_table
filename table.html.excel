<!DOCTYPE html>
<html>
<head>
<title>JSON 2 Table</title>
<style>
/*____________ font  ________________ */
* {
    font-family: sans-serif;
    font-size: 11px;
}
/*____________ table  ________________ */
table {
    border-spacing: 0;
    width: 100%;
    border: 1px solid #ddd;
}

th {
    cursor: pointer;
    background-color: #9AFF9A;   /* Green */
}

th, td {
    text-align: left;
    padding: 5px;
}

.json_table tr:nth-child(even) {
    background-color: #f2f2f2
}

/*_____________ textarea _______________ */
textarea {
    overflow-y:scroll;
    overflow-x:scroll;
}

/*____________ form ________________ */
form  { display: table;      }
label { display: table-cell; }
input { display: table-cell; }

/*____________ button ________________ */
.convert_button {
    background-color: #4CAF50; /* Green */
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    font-size: 16px;
	border-radius: 12px;
	display: block;
    margin:auto;
}

/*____________ statistics  ________________ */
#input_transaction_id { background-color: #f0f0f5; /* light grey */ }
#input_accepted       { background-color: #e6ffcc; /* light green */ }
#input_rejected       { background-color: #ffcccc; /* light red */ }

/*____________ class error  ________________ */
.content_error {
    background-color: #ffcccc; /* light red */
}

</style>
</head>
<body onload="reset_vars()">

  <form>
      <input type="file"   name="datafile" size="40" id="JSONfile"  onchange="initTextArea()">
  </form>

JSON fragment:<br>
<textarea id="JsonTextarea" rows="30" cols="80" wrap="off"> </textarea>
  <form>
      <div class="wrapper_button">
		  <input type="button"  class="convert_button" value="CONVERT" id="convet"  onclick="loadJSON()" > <br>
      </div>
       <table>
            <tr>
                 <td align="right">transaction_id:</td>
                 <td align="left"><input type="text" id="input_transaction_id" readonly /></td>
            </tr>
            <tr>
                 <td align="right">transaction_status (accepted):</td>
                 <td align="left"><input type="text" id="input_accepted" readonly /></td>
            </tr>
            <tr>
                 <td align="right">transaction_status (rejected):</td>
                 <td align="left"><input type="text" id="input_rejected" readonly /></td>
            </tr>
       </table>
      <div class="wrapper_export">
		  <input type="button"  class="export_button" value="export csv" id="export"  onclick="export_csv()" > <br>
		  <textarea id="excel_export" style="display:none"></textarea>
          <iframe   id="iframe_doc"   style="display:none"></iframe>
      </div>
  </form>

  <table  class="json_table" id="outTable">
  </table>


<script>
//______________________________________________________
	var json_array;
    var list_of_headers = {};
    var statistics    = {transaction_id:0, accepted:0, rejected:0};
    var col_name_sort;
    var out_table_id = 'outTable';
//______________________________________________________
function initTextArea () {
    var JSONfile   = document.getElementById("JSONfile").files[0];
    var reader = new FileReader();

    reader.onload = function (e) {
        var textArea = document.getElementById("JsonTextarea");
        textArea.value = e.target.result;
    };
    reader.readAsText(JSONfile);
}
//______________________________________________________
function get_list_of_key_names () {

    for (var i = 0; i < json_array.length; i++) {
        for (var k in json_array[i] ) {
            list_of_headers[k] = 1;  /* besides the name itself I can also use a value for sorting: 1 ascending 0 descending */
        }
    }
}
//______________________________________________________
function print_statistics () {

    for (var k in statistics ) {
        var field  = document.getElementById('input_' + k);
        field.value = statistics[k];
    }
}
//______________________________________________________
function check_data (key, val) {

    var check = {};

    key = key ? key.toLowerCase() : '';

    if ( key == 'transaction_id' ) {
        statistics.transaction_id ++;
    }

    if ((typeof val) == 'string' ) {
        val = val.toLowerCase();
        if ( key == 'transaction_status' ) {
            if ( val == 'accepted' ) {
                statistics.accepted ++;
            }
            else if ( val == 'rejected' ) {
                statistics.rejected ++;
                check.css_class = 'content_error';
            }
        }
	}
    else if (val) {
        check.css_class = 'content_error';
    }
    return check;
}

//______________________________________________________
function empty_table () {

    var table  = document.getElementById(out_table_id);
    while (table.firstChild) {
       table.removeChild(table.firstChild);
    }
}

//______________________________________________________
function empty_statistics () {

    statistics.transaction_id = 0;
    statistics.accepted = 0;
    statistics.rejected = 0;

    print_statistics ();
}

//______________________________________________________
function reset_vars () {

    //reset Table
    empty_table ();

    //reset names for columns
    list_of_headers = {};

    empty_statistics ();
}

//______________________________________________________
//function print_table () {
//
//    empty_table ();
//    empty_statistics ();
//
//    var table  = document.getElementById(out_table_id);
//    var row    = table.insertRow(0);
//    // write Table header
//    for (var n in list_of_headers) {
//        var cell = document.createElement("TH");
//        cell.innerHTML = n;
//        cell.id        = n;
//        cell.onclick   = event_sort;
//
//        row.appendChild(cell);
//    }
//    // write all the rows
//    for (var i = 0; i < json_array.length; i++) {
//        row = table.insertRow(i+1);
//        var c = 0;
//        for (var n in list_of_headers) {
//              var val = json_array [i][n];
//              var check = check_data (n, val);
//              if (! val) { val = ''; }
//              var cell = row.insertCell(c++);
//              cell.innerHTML = val;
//              if ( check.css_class ) { cell.className += " " + check.css_class; }
//        }
//    }
//    print_statistics ();
//}
//
//______________________________________________________
function print_table () {

    empty_table ();
    empty_statistics ();

    var cell, table  = document.getElementById(out_table_id);

    //_______ add <thead> & <tbody>
    var header = table.createTHead();
    var tbody  = document.createElement("TBODY");
    table.appendChild(tbody);

    //______ add the header row
    var row    = header.insertRow(0);
    //______ add 1st column to number the rows
    cell = document.createElement("TH"); cell.innerHTML = '#'; row.appendChild(cell);
    //______ add other columns
    for (var n in list_of_headers) {
        cell = document.createElement("TH");
        cell.innerHTML = n;
        cell.id        = n;
        cell.onclick   = event_sort;

        row.appendChild(cell);
    }
    // add all the tbody rows
    for (var i = 0; i < json_array.length; i++) {
        var row = document.createElement("TR");
        var c = 0;
        cell = row.insertCell(c++); cell.innerHTML = i + 1;  // add num of row
        for (var n in list_of_headers) {
              var val = json_array [i][n];
              var check = check_data (n, val);
              if (! val) { val = ''; }
              cell = row.insertCell(c++);
              cell.innerHTML = val;
              if ( check.css_class ) { cell.className += " " + check.css_class; }
        }
        tbody.appendChild(row);
    }
    print_statistics ();
}

//______________________________________________________
function compare_json(a,b) {

     a_val = ((typeof a[col_name_sort]) == 'string' ) ? a[col_name_sort] : '';
     b_val = ((typeof b[col_name_sort]) == 'string' ) ? b[col_name_sort] : '';

     if (a_val < b_val) { return list_of_headers[col_name_sort] ? -1 : 1; }
     if (a_val > b_val) { return list_of_headers[col_name_sort] ? 1 : -1; }
     return 0;
}

//______________________________________________________
function event_sort() {

    col_name_sort = this.id;
    json_array.sort (compare_json);
    list_of_headers[col_name_sort] = (list_of_headers[col_name_sort]+1) % 2;
    print_table ();
}

//______________________________________________________
function loadJSON () {

    try {
        var json_text = document.getElementById("JsonTextarea").value;
        reset_vars ();
        json_array = JSON.parse (json_text).items;
        get_list_of_key_names ();
        print_table ();
    }
    catch(err) {
            alert (err.message);
    }
}
//______________________________________________________
function export_excel ()
{
	var text_area = document.getElementById('excel_export');
    var textRange;
    var table  = document.getElementById(out_table_id);

    text_area.value = "<table border='2px'>";
    for(var r = 0 ; r < table.rows.length ; r++)
    {
        text_area.value += '<tr>' + table.rows[r].innerHTML + '</tr>';
    }

    text_area.value += '</table>';

    var ua = window.navigator.userAgent;
    var msie = ua.indexOf('MSIE ');

    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) // If Internet Explorer
    {
		var iframe    = document.getElementById('iframe_doc');
        iframe.document.open('txt/html','replace');
        iframe.document.write(text_area.value);
        iframe.document.close();
        iframe.focus();
        sa = text_area.document.execCommand('SaveAs',true,'Say Thanks to Sumit.xls');
    }
    else  //other browsers
        sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(text_area.value));

    return (sa);
}
//______________________________________________________
function download_csv(csv, filename) {
    var csvFile;
    var downloadLink;

    // CSV FILE
    csvFile = new Blob([csv], {type: "text/csv"});

    // Download link
    downloadLink = document.createElement("a");

    // File name
    downloadLink.download = filename;

    // We have to create a link to the file
    downloadLink.href = window.URL.createObjectURL(csvFile);

    // Make sure that the link is not displayed
    downloadLink.style.display = "none";

    // Add the link to your DOM
    document.body.appendChild(downloadLink);

    // Lanzamos
    downloadLink.click();
}

function export_table_to_csv(html, filename) {
	var csv = [];
	var rows = document.querySelectorAll("table tr");

    for (var i = 0; i < rows.length; i++) {
		var row = [], cols = rows[i].querySelectorAll("td, th");

        for (var j = 0; j < cols.length; j++)
            row.push(cols[j].innerText);

		csv.push(row.join(","));
	}

    // Download CSV
    download_csv(csv.join("\n"), filename);
}

document.querySelector("button").addEventListener("click", function () {
    var html = document.querySelector("table").outerHTML;
	export_table_to_csv(html, "table.csv");
});

//______________________________________________________
</script>

</body>
</html>

